/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SupplieRole;

import BusinessLogic.Bean.Crop;
import BusinessLogic.EcoSystem;
import BusinessLogic.Employee.Employee;
import BusinessLogic.Employee.Gadget;
import BusinessLogic.Employee.Gadget.GadgetType;
import BusinessLogic.Employee.Supplier;
import BusinessLogic.Enterprise.Enterprise;
import BusinessLogic.Network.Network;
import BusinessLogic.Organization.Organization;
import BusinessLogic.UserAccount.UserAccount;
import Util.Utility;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author nehal
 */
public class SupplierWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SupplierWorkAreaJPanel
     */
 private JPanel userProcessContainer;
    private UserAccount account;
    private Organization organization;
    private Enterprise enterprise;
    private Network network; 
    private EcoSystem business;
    
    private Supplier supplier;

    public SupplierWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, Network network, EcoSystem business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
    this.account = account;
    this.organization = organization;
    this.network = network;
    this.business = business;
    Employee e = account.getEmployee();
    this.supplier = ((Supplier)e);
    
    
        
        suppliernameJLabel.setText("Hello, "+e.getName());
        networkJLabel.setText("Network : "+network.getName());
        
        populateGadgetJComboBox();
    }
public boolean isGadgetPresent(GadgetType gadgetType){
    
    for(Gadget g : supplier.getMasterGadgetCatalog().getGadgetList()){
                          
          if(g.getTypeOfGadget() == gadgetType)
           return true;           
              }
  return false;  
}
    public void populateGadgetJComboBox(){
       
        gadgetsJComboBox.removeAllItems();
        
   int count = 0;
                   for (GadgetType gadgetType : Gadget.GadgetType.values()){

                       Gadget g = new Gadget();
                        g.setName(gadgetType.getValue());
                       g.setTypeOfGadget(gadgetType);
                       
                      if(!isGadgetPresent(gadgetType)){
                          count++;
                       gadgetsJComboBox.addItem(g);   
                      }
           if(count == 0){
               
            errGadgetJComboBox.setText("No Gadgets to add");
            addJButton.setEnabled(false);
            descriptionJTextArea.setEnabled(false);
           } 
           
           else{
              errGadgetJComboBox.setText(""); 
              addJButton.setEnabled(true);
            descriptionJTextArea.setEnabled(true);
           }
//                 Gadget g = gadgetCatalog.createGadget(gadgetType);  
//                 g.setName(gadgetType.getValue());

    }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nameJtextField = new javax.swing.JTextField();
        createCropJButton = new javax.swing.JButton();
        errnameJLabel = new javax.swing.JLabel();
        errDevpJLabel = new javax.swing.JLabel();
        errMoistureJLabel = new javax.swing.JLabel();
        devpTimeSpinner = new javax.swing.JSpinner();
        thresholdSpinner = new javax.swing.JSpinner();
        jPanel3 = new javax.swing.JPanel();
        gadgetsJComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        addJButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionJTextArea = new javax.swing.JTextArea();
        errDescriptionJLabel = new javax.swing.JLabel();
        errGadgetJComboBox = new javax.swing.JLabel();
        suppliernameJLabel = new javax.swing.JLabel();
        networkJLabel = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 975, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Home >> ", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Name");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(313, 64, -1, -1));

        jLabel2.setText("Development time in days");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, -1, -1));

        jLabel3.setText("Moisture Threshold");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 220, -1, -1));

        nameJtextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameJtextFieldFocusLost(evt);
            }
        });
        jPanel2.add(nameJtextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(383, 37, 160, 50));

        createCropJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/SupplieRole/images/add32.png"))); // NOI18N
        createCropJButton.setText("Add Crop");
        createCropJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createCropJButtonActionPerformed(evt);
            }
        });
        jPanel2.add(createCropJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(378, 311, 160, 50));

        errnameJLabel.setForeground(new java.awt.Color(255, 51, 102));
        jPanel2.add(errnameJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 90, 320, 30));

        errDevpJLabel.setForeground(new java.awt.Color(255, 51, 102));
        jPanel2.add(errDevpJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 170, 280, 30));

        errMoistureJLabel.setForeground(new java.awt.Color(255, 51, 102));
        jPanel2.add(errMoistureJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 270, 290, 30));

        devpTimeSpinner.setModel(new javax.swing.SpinnerNumberModel(100, 50, 150, 1));
        jPanel2.add(devpTimeSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 130, 70, 50));

        thresholdSpinner.setModel(new javax.swing.SpinnerNumberModel(30, 20, 50, 1));
        jPanel2.add(thresholdSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 220, 70, 50));

        jTabbedPane1.addTab("Add Crop >> ", jPanel2);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        gadgetsJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel3.add(gadgetsJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 50, 200, 50));

        jLabel4.setText("Gadget");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, -1, -1));

        addJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/SupplieRole/images/add32.png"))); // NOI18N
        addJButton.setText("Add Gadget");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        jPanel3.add(addJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 320, 200, 50));

        jLabel5.setText("Description");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(307, 185, -1, -1));

        descriptionJTextArea.setColumns(20);
        descriptionJTextArea.setRows(5);
        descriptionJTextArea.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                descriptionJTextAreaFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(descriptionJTextArea);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 146, 210, 110));

        errDescriptionJLabel.setForeground(new java.awt.Color(255, 51, 102));
        jPanel3.add(errDescriptionJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 270, 299, 40));

        errGadgetJComboBox.setForeground(new java.awt.Color(255, 51, 102));
        jPanel3.add(errGadgetJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, 270, 30));

        jTabbedPane1.addTab("Add Gadget >> ", jPanel3);

        add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 97, 980, -1));

        suppliernameJLabel.setText("<supplierName>");
        add(suppliernameJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(683, 28, -1, -1));

        networkJLabel.setText("network");
        add(networkJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 60, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

     private Boolean flagCropname = true;
//    private Boolean flagDevpTime = true;
//    private Boolean flagMoistureThreshold = true;
    
    private void nameJtextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameJtextFieldFocusLost
        // TODO add your handling code here:
        String cropName = nameJtextField.getText().trim(); 
        if(!cropName.isEmpty()){
            
        
        if(!Utility.isValidName(cropName)){
         errnameJLabel.setText("Crop name can contain alphabets only");
         flagCropname = false;   
        }else{
         errnameJLabel.setText("");
         flagCropname = true;    
        }
        }else{
            
         errnameJLabel.setText("Crop name can not be empty");
         flagCropname = false;     
        }
    }//GEN-LAST:event_nameJtextFieldFocusLost
   
    private void createCropJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createCropJButtonActionPerformed
        // TODO add your handling code here:
        
        // red  [255,51,102]
        boolean flag = true;
        
        String cropName = nameJtextField.getText();
        
        int devpDays = (int) devpTimeSpinner.getValue();
        int moistureThreshold = (int) thresholdSpinner.getValue();
        
        
        if(cropName.isEmpty()){
            
            errnameJLabel.setText("Please enter  Crop Name");
            
            flag = false; 
        }
        
//         if(devpDays.isEmpty()){
//            
//            errDevpJLabel.setText("Please enter development time in days");
//            
//            flag = false; 
//        }
//         
//          if(moistureThreshold.isEmpty()){
//            
//            errMoistureJLabel.setText("Please enter Moisture threshold of crop");
//            
//            flag = false; 
//        }
        
        if(flagCropname){
   
        
    }
    else{
        flag = false;
    }
        
        if (flag){
            Crop c = new Crop();
            c.setCropName(cropName);
            c.setDevelopmentTimeInDays(devpDays);
            c.setMoistureThreshold(moistureThreshold);
            c.setSupplier(supplier);
            supplier.getMasterCropCatalog().addCrop(c);
        
        JOptionPane.showMessageDialog(this, "Crop added successfully");
        nameJtextField.setText("");
       
        }
        
    }//GEN-LAST:event_createCropJButtonActionPerformed

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        // TODO add your handling code here:
        boolean flag = true;
        String description = descriptionJTextArea.getText();
        
        if(description.isEmpty()){
          errDescriptionJLabel.setText("Please provide a description");
          flag = false;  
        }
        
        if(flag){
            Gadget gadget = (Gadget) gadgetsJComboBox.getSelectedItem();
             Gadget g = supplier.getMasterGadgetCatalog().createGadget(gadget);  
              g.setSupplier(supplier);
            JOptionPane.showMessageDialog(this, "Gadget has been addded succesfully");
             populateGadgetJComboBox();
        }
        
       
    }//GEN-LAST:event_addJButtonActionPerformed

    private void descriptionJTextAreaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_descriptionJTextAreaFocusLost
        // TODO add your handling code here:
        
       String description = descriptionJTextArea.getText();
        
        if(!description.isEmpty()){
         errDescriptionJLabel.setText("");
        }
        
    }//GEN-LAST:event_descriptionJTextAreaFocusLost


    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton createCropJButton;
    private javax.swing.JTextArea descriptionJTextArea;
    private javax.swing.JSpinner devpTimeSpinner;
    private javax.swing.JLabel errDescriptionJLabel;
    private javax.swing.JLabel errDevpJLabel;
    private javax.swing.JLabel errGadgetJComboBox;
    private javax.swing.JLabel errMoistureJLabel;
    private javax.swing.JLabel errnameJLabel;
    private javax.swing.JComboBox gadgetsJComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField nameJtextField;
    private javax.swing.JLabel networkJLabel;
    private javax.swing.JLabel suppliernameJLabel;
    private javax.swing.JSpinner thresholdSpinner;
    // End of variables declaration//GEN-END:variables
}
